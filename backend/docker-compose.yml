services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: myroom-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: myroom_db
      POSTGRES_USER: anh
      POSTGRES_PASSWORD: db123456
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - myroom-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U anh -d myroom_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: myroom-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass rd123456
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - myroom-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "rd123456", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5





  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: myroom-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - myroom-network
    depends_on:
      - postgres
    profiles:
      - nginx

  # Database Admin (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: myroom-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - myroom-network
    depends_on:
      - postgres
    profiles:
      - admin

  # Redis Admin (RedisInsight)
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: myroom-redis-insight
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - redis_insight_data:/db
    networks:
      - myroom-network
    depends_on:
      - redis
    profiles:
      - admin

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_insight_data:
    driver: local

networks:
  myroom-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16