services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: myroom-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: myroom_db
      POSTGRES_USER: anh
      POSTGRES_PASSWORD: db123456
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - myroom-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U anh -d myroom_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: myroom-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass rd123456
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - myroom-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "rd123456", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5



  # MyRoom Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: myroom-api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      HOST: 0.0.0.0
      
      # Database
      DATABASE_URL: postgresql://anh:db123456@postgres:5432/myroom_db
      INIT_DB: true
      
      # Redis
      REDIS_URL: redis://:rd123456@redis:6379
      
      # JWT
      JWT_SECRET: nguyenhoanganhdangthithanhy04051995
      JWT_EXPIRES_IN: 7d
      JWT_REFRESH_EXPIRES_IN: 30d
      JWT_REFRESH_SECRET: nguyenhoanganhdangthithanhy04051995refresh
      SESSION_SECRET: nguyenhoanganhdangthithanhy04051995session
      
      # AWS S3 Configuration
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: AKIAV3KWVNNCB6BBLH6P
      AWS_SECRET_ACCESS_KEY: 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
      AWS_S3_BUCKET: myravt
      
      # Security
      BCRYPT_ROUNDS: 12
      API_KEY_LENGTH: 32
      CORS_ORIGIN: http://localhost:5173,http://localhost:5174,http://localhost:5175
      CORS_CREDENTIALS: true
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 1000
      
      # File Upload
      UPLOAD_MAX_FILE_SIZE: 50mb
      UPLOAD_ALLOWED_TYPES: image/jpeg,image/png,image/webp,model/gltf-binary,application/octet-stream
      
      # Features
      FEATURE_RATE_LIMITING: false
      FEATURE_REQUEST_LOGGING: true
      FEATURE_SWAGGER: true
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - myroom-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: myroom-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - myroom-network
    depends_on:
      - api
    profiles:
      - nginx

  # Database Admin (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: myroom-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - myroom-network
    depends_on:
      - postgres
    profiles:
      - admin

  # Redis Admin (RedisInsight)
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: myroom-redis-insight
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - redis_insight_data:/db
    networks:
      - myroom-network
    depends_on:
      - redis
    profiles:
      - admin

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_insight_data:
    driver: local

networks:
  myroom-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16